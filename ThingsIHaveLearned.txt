Things I have learned during my Internship: 

1. Git:- Git is a mature, actively maintained open source project originally developed in
2005 by Linus Torvalds, the famous creator of the Linux operating system kernel. A staggering
number of software projects rely on Git for version control, including commercial project
s as well as open source.

2. GitHub:- is a Git repository hosting service, but it adds many of its own features. While
Git is a command line tool, GitHub provides a Web-based graphical interface. It also provides
access control and several collaboration features, such as a wikis and basic task management
tools for every project.

3. API:- Application program interface (API) is a set of routines, protocols, and tools for 
building software applications. An API specifies how software components should interact and 
APIs are used when programming graphical user interface (GUI) components.

4. BitBucket:- is a web-based hosting service for projects that use either the Mercurial 
(since launch) or Git (since October 2011) revision control systems. Bitbucket offers both 
commercial plans and free accounts.

5. cURL:- is a computer software project providing a library and command-line tool for transferring 
data using various protocols. The cURL project produces two products, libcurl and cURL.

6. Dependencies:- The cornerstone of the POM is its dependency list. Most every project depends 
upon others to build and run correctly, and if all Maven does for you is manage this list for you, 
you have gained a lot. Maven downloads and links the dependencies for you on compilation and other 
goals that require them. As an added bonus, Maven brings in the dependencies of those dependencies 
(transitive dependencies), allowing your list to focus solely on the dependencies your project 
requires.

7. Transitive Dependencies:- Transitive dependencies are dependencies that are depending on main 
dependencies.

8. Docker:- Package your application into a standardized unit for software development. Docker 
containers wrap a piece of software in a complete file system that contains everything needed to run: 
code, runtime, system tools, system libraries â€“ anything that can be installed on a server.